{"ast":null,"code":"/**\n * Check is item is object\n * @return {Boolean}\n */\nexport var isObject = function isObject(val) {\n  return Object.prototype.toString.call(val) === \"[object Object]\";\n};\n/**\n * Check for valid JSON string\n * @param  {String}   str\n * @return {Boolean|Array|Object}\n */\n\nexport var isJson = function isJson(str) {\n  var t = !1;\n\n  try {\n    t = JSON.parse(str);\n  } catch (e) {\n    return !1;\n  }\n\n  return !(null === t || !Array.isArray(t) && !isObject(t)) && t;\n};\n/**\n * Create DOM element node\n * @param  {String}   nodeName nodeName\n * @param  {Object}   attrs properties and attributes\n * @return {Object}\n */\n\nexport var createElement = function createElement(nodeName, attrs) {\n  var dom = document.createElement(nodeName);\n\n  if (attrs && \"object\" == typeof attrs) {\n    for (var attr in attrs) {\n      if (\"html\" === attr) {\n        dom.innerHTML = attrs[attr];\n      } else {\n        dom.setAttribute(attr, attrs[attr]);\n      }\n    }\n  }\n\n  return dom;\n};\nexport var flush = function flush(el) {\n  if (el instanceof NodeList) {\n    el.forEach(function (e) {\n      return flush(e);\n    });\n  } else {\n    el.innerHTML = \"\";\n  }\n};\n/**\n * Create button helper\n * @param  {String}   class\n * @param  {Number}   page\n * @param  {String}   text\n * @return {Object}\n */\n\nexport var button = function button(className, page, text) {\n  return createElement(\"li\", {\n    class: className,\n    html: \"<a href=\\\"#\\\" data-page=\\\"\".concat(page, \"\\\">\").concat(text, \"</a>\")\n  });\n};\n/**\n * Bubble sort algorithm\n */\n\nexport var sortItems = function sortItems(a, b) {\n  var c;\n  var d;\n\n  if (1 === b) {\n    c = 0;\n    d = a.length;\n  } else {\n    if (b === -1) {\n      c = a.length - 1;\n      d = -1;\n    }\n  }\n\n  for (var e = !0; e;) {\n    e = !1;\n\n    for (var f = c; f != d; f += b) {\n      if (a[f + b] && a[f].value > a[f + b].value) {\n        var g = a[f];\n        var h = a[f + b];\n        var i = g;\n        a[f] = h;\n        a[f + b] = i;\n        e = !0;\n      }\n    }\n  }\n\n  return a;\n};\n/**\n * Pager truncation algorithm\n */\n\nexport var truncate = function truncate(a, b, c, d, ellipsis) {\n  d = d || 2;\n  var j;\n  var e = 2 * d;\n  var f = b - d;\n  var g = b + d;\n  var h = [];\n  var i = [];\n\n  if (b < 4 - d + e) {\n    g = 3 + e;\n  } else if (b > c - (3 - d + e)) {\n    f = c - (2 + e);\n  }\n\n  for (var k = 1; k <= c; k++) {\n    if (1 == k || k == c || k >= f && k <= g) {\n      var l = a[k - 1];\n      l.classList.remove(\"active\");\n      h.push(l);\n    }\n  }\n\n  h.forEach(function (c) {\n    var d = c.children[0].getAttribute(\"data-page\");\n\n    if (j) {\n      var _e = j.children[0].getAttribute(\"data-page\");\n\n      if (d - _e == 2) i.push(a[_e]);else if (d - _e != 1) {\n        var _f = createElement(\"li\", {\n          class: \"ellipsis\",\n          html: \"<a href=\\\"#\\\">\".concat(ellipsis, \"</a>\")\n        });\n\n        i.push(_f);\n      }\n    }\n\n    i.push(c);\n    j = c;\n  });\n  return i;\n};","map":null,"metadata":{},"sourceType":"module"}