{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/NodeJs/gereja/gereja-fe/shard/Source Files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/NodeJs/gereja/gereja-fe/shard/Source Files/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { createElement } from \"./helpers\";\n/**\n * Rows API\n * @param {Object} instance DataTable instance\n * @param {Array} rows\n */\n\nexport var Rows = /*#__PURE__*/function () {\n  function Rows(dt, rows) {\n    _classCallCheck(this, Rows);\n\n    this.dt = dt;\n    this.rows = rows;\n    return this;\n  }\n  /**\n   * Build a new row\n   * @param  {Array} row\n   * @return {HTMLElement}\n   */\n\n\n  _createClass(Rows, [{\n    key: \"build\",\n    value: function build(row) {\n      var tr = createElement(\"tr\");\n      var headings = this.dt.headings;\n\n      if (!headings.length) {\n        headings = row.map(function () {\n          return \"\";\n        });\n      }\n\n      headings.forEach(function (h, i) {\n        var td = createElement(\"td\"); // Fixes #29\n\n        if (!row[i] || !row[i].length) {\n          row[i] = \"\";\n        }\n\n        td.innerHTML = row[i];\n        td.data = row[i];\n        tr.appendChild(td);\n      });\n      return tr;\n    }\n  }, {\n    key: \"render\",\n    value: function render(row) {\n      return row;\n    }\n    /**\n     * Add new row\n     * @param {Array} select\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(data) {\n      var _this = this;\n\n      if (Array.isArray(data)) {\n        var dt = this.dt; // Check for multiple rows\n\n        if (Array.isArray(data[0])) {\n          data.forEach(function (row) {\n            dt.data.push(_this.build(row));\n          });\n        } else {\n          dt.data.push(this.build(data));\n        } // We may have added data to an empty table\n\n\n        if (dt.data.length) {\n          dt.hasRows = true;\n        }\n\n        this.update();\n        dt.columns().rebuild();\n      }\n    }\n    /**\n     * Remove row(s)\n     * @param  {Array|Number} select\n     * @return {Void}\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(select) {\n      var dt = this.dt;\n\n      if (Array.isArray(select)) {\n        // Remove in reverse otherwise the indexes will be incorrect\n        select.sort(function (a, b) {\n          return b - a;\n        });\n        select.forEach(function (row) {\n          dt.data.splice(row, 1);\n        });\n      } else if (select == 'all') {\n        dt.data = [];\n      } else {\n        dt.data.splice(select, 1);\n      } // We may have emptied the table\n\n\n      if (!dt.data.length) {\n        dt.hasRows = false;\n      }\n\n      this.update();\n      dt.columns().rebuild();\n    }\n    /**\n     * Update row indexes\n     * @return {Void}\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.dt.data.forEach(function (row, i) {\n        row.dataIndex = i;\n      });\n    }\n  }]);\n\n  return Rows;\n}();","map":null,"metadata":{},"sourceType":"module"}